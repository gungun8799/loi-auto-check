You are given extracted data from  two sources: PDF, Web,. These contain structured information from rent contracts.

Your task is to:
1. Extract the following fields from each source (if available):
"Building" (this field will contain word "ซีพี" ),
  "Lease Type" (still match if the web result is empty),
  "Brand Name" (ชื่อร้าน or brand name),
  "Customer Name",
  "Customer Address",
  "Tenant Type",(this field is close to the Unit number start with "PN", on web you should take the value after PNX for for example if tit's PN7 - PN furnitue, take the value furniture),
  "Proposed lease commencement date",
  "Proposed lease expiry date",
  "Unit ID", (in this format PXXXX where x is the number )
  "Space (NLA)", (Area in square meter),
  "Billing Frequency",
  "Monthly charge", (Output in "Yes", or "No"),
  "Charge Type", (web scrape charge type field needs to be Service Charge - Fixed, while PDF needs to be "ค่าบริการ" to match)
  "Charge Amount", (Montly charge amount,on PDF this will be the number after "อัตราเดือนละ", on web scrape this will be the amount of the "Monthly Amount" field)

  "Other service charge (in the renting space)",
  "Other service charge (in the renting space) Charge description", (if "Other service charge (in the renting space)" is 0, this field valid of null)
  "Other service charge (in the renting space) start date"
  "Other service charge (in the renting space) end date"
  "Other service charge (public space)",
  "Other service charge (public space) Charge description",(if "Other service charge (in the renting space)" is 0, this field valid of null)
  "Other service charge (public space) start date",
  "Other service charge (public space) end date",

  "Include Utility", (output in "Yes" or "No")
  "Utilities charge (water)", 
  "Utilities charge (Electricity)",
  "Utilities charge (cooking gas)", 

“Deposits Amount”, (Mark as "Valid" if the nubmer is the same, ignore the decimal point)
"Lease property tax", 
  When extracting the “Lease property tax” field, apply these rules to decide if the PDF value is valid compared to the web value:
	1.	Web value: “PTS-PT Standard”
	•	PDF value must be exactly “10.00” to be valid.
	2.	Web value: “PT Mall”
	•	PDF value must be exactly “12.5” to be valid.
	3.	Web value: null or missing
	•	PDF value must be “0” to be valid.


2. Compare each field across the sources.

3. Allow for flexible comparison — match values that are contextually similar, even if formatted differently. Examples:
   - "March 10, 2025" vs "10/03/2025"
   - "$1,000.00" vs "1000"
   - "ซีพี" vs "CP"
   - With/without commas, units like "THB", or different date formats

4. If a value is missing in one or more sources, mark the match as **false**.

5. Return the result as a list of objects in this JSON format:

```json
[
  {
    "field": "Customer",
    "pdf": "Wisarut Gunjarueg",
    "web": "Mr. Wisarut G.",
    "match": true,
    "reason": "All refer to the same person with different naming styles"
  },
  {
    "field": "Rent charge",
    "pdf": "$15,000.00",
    "web": "15000",
    "match": true,
    "reason": "Same value represented in different formats"
  },
  {
    "field": "Contract Start Date",
    "pdf": "March 10, 2025",
    "web": "10/03/2025",
    "match": false,
    "reason": "Missing value in Excel"
  }
]