Extract key fields from the following rent contract content and return these fields in JSON format
  "Building Name", this field will contain this format "5066 - บมจ. ซีพี แอ็กซ์ตร้า ปากช่อง (5066)" or "บมจ. ซีพีแอ๊กซ์ตร้าบางปะกอก(5036)" just extract the building name "บมจ. ซีพี แอ็กซ์ตร้า ปากช่อง ",
  "Building ID", this field will contain this format "5066 - บมจ. ซีพี แอ็กซ์ตร้า ปากช่อง (5066)" or "บมจ. ซีพีแอ๊กซ์ตร้าบางปะกอก(5036)" just extract the 4 digits building ID ,
  "Contract Number" (This will be under Opp field, on web it's called "lease Offer nunber" or "lease renewal number"),
  "Lease Type" (for both PDF and WEb scrape, just put the result as "Service Express" ),
  "Brand Name" (ชื่อร้าน or brand name),
  "Property Type",
  "Customer Name",
  "Customer Address",
  “Tenant Type”,
  • Locate the line that begins with “Type:”. Sometimes the value is split across two lines:
      Example from OCR:
        Type: PF Local -
        Beverage
      You must join both lines into one string: “PF Local - Beverage”.

  • Steps:
    1. Find the text “Type:”.
    2. Read everything after the colon on that same line.
    3. If the line ends with a dash (–) or hyphen (–), also append the very next non-empty line.
    4. Trim all leading/trailing whitespace and collapse multiple spaces.
    5. Return the full string, e.g. “PF Local - Beverage”.

  • For web‐scrape values (already one line), simply take the entire string after “Type:”.
  "Big Tenant",(Put as "No" for now)
  "Proposed lease commencement date",
  "Proposed lease expiry date",
  "Unit ID", (in this format PXXXX where x is the number )
  "Space (NLA)", (Area in square meter),
  "Space Design Type",
  "Billing Options", (Have to select calenday month, fill this field in "Calendar Month" or "Anniversary Month")
  "Billing Frequency",
  "Payment Term", 
  "Monthly rental rate",
  "Rental Ratio",      
  "Lease property tax rate" (check for two type of field, type like "PTS - PT Standard", "PT - MALL", or number "10", "12.5"),
  “Monthly charge”,
	•	Output “Yes” if the field indicates a recurring monthly fee (e.g. contains words like “per month,” “monthly,” “each month,” etc.).
	•	Otherwise output “No”.
	•	Treat common synonyms (e.g. “monthly rent,” “charged monthly,” “per mo.”) as “Yes.”  "Charge Type", (for PDF scrape, always put as "Service Charge-Fixed"),
  

  "Other service charge (in the renting space)",if you cannot find anything, put the value as 0.00
  "Other service charge (in the renting space) Charge description",
  "Other service charge (in the renting space) start date"
  "Other service charge (in the renting space) end date"
  "Other service charge (public space)", if you cannot find anything, put the value as 0.00
  "Other service charge (public space) Charge description", 
  "Other service charge (public space) start date",
  "Other service charge (public space) end date",

  "Utilities charge (water)",on web check the "Meter Type" column and extract number value from "Tariff as at Contract Start Date"  column, if you cannot find anything, put the value as 0.00
  "Utilities charge (Electricity)",on web check the "Meter Type" column and extract number value from "Tariff as at Contract Start Date"  column, if you cannot find anything, put the value as 0.00
  "Utilities charge (cooking gas)",on web check the "Meter Type" column and extract number value from "Tariff as at Contract Start Date"  column, if you cannot find anything, put the value as 0.00
  “In­clude Utility”,
  • Output must be exactly “Yes” or “No.”
  • From the PDF data, inspect these three fields:
      – “Utilities charge (water)”
      – “Utilities charge (Electricity)”
      – “Utilities charge (cooking gas)”
  • If **any** of those three numbers is non-zero, return **“Yes.”**
  • If **all three** are exactly 0.00 (or missing), return **“No.”**

"Deposit Amount",

// If a signature line is present, put true; if no signature line at all, put false.  
// For each “(name of the signed person)”, if that printed name is missing, leave as null.  
"CP Axtra signee 1",        // true or false  
"CP Axtra signee 1 (name of the signed person)", // printed name or null  
"CP Axtra witness",         // true or false  
"CP Axtra witness (name of the signed person)",  // printed name of the nearest field to "พยาน"
"Customer signee 1",        // true or false  
"Customer signee 1 (name of the signed person)",// printed name or null  

// —— NEW: exactly how to find Customer signee 2 ——
// In this contract, the second “โดย” block (in Thai) is the second customer signature.
// Step 1: find the first occurrence of the exact Hebrew/Thai word “โดย” outside any parentheses.
// Step 2: skip down past its signature field. The printed name immediately after (on the next line) is Customer signee 1.
// Step 3: find the second occurrence of “โดย” outside parentheses on the same half-page. Skip any noise (e.g. “Time 6-03-25”, “พยาน”, etc.) until you see a parenthesis “(” followed by a name string.
// Step 4: that name string (e.g. “เขษฐา วราฤทธิ์”) is Customer signee 2’s printed name.  
"Customer signee 2",        // true or false  
"Customer signee 2 (name of the signed person)", // e.g. “เขษฐา วราฤทธิ์” or null  

"Customer witness",         // true or false  
"Customer witness (name of the signed person)",  // printed name or null  


  "Name on Citizen ID card ",
  "Address on Citizen ID card ",
  "Citizen ID Number",
  "Citizen ID expiration date"

  "Workflow status" (there can only be these workflows in order: Start, Draft, Pending GTO Update, Pending Approval, Accepted,Rejected,  ),

